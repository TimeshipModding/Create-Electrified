// TimeshipModding developers, Do Not Touch if you haven't been asked too.

// Project Plugins
plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

// Main Directory Location
group = 'com.timeshipmodding.modid'

// Build naming
archivesBaseName = "createlectrified${minecraft_version}${mod_version}"

// Java Version
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // Mappings
    mappings channel: 'parchment', version: '2022.10.16-1.19.2'

    // Run Config
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'createlectrified'

            mods {
                createlectrified {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'createlectrified'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                createlectrified {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'createlectrified'

            mods {
                createlectrified {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Datagen and Generated File Locations
            args '--mod', 'createlectrified', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                createlectrified {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Project Repositories
repositories {
    maven { // Create and Flywheel Maven
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }
    maven { // JEI Maven
        url "https://dvs1.progwml6.com/files/maven"
    }
}

// Project Dependencies
dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.11'

    // Create Dependency
    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false }

    // Flywheel Dependency
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")

    // Registrate Dependency (For Create)
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")

    // JEI Dependencies
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:${jei_version}")

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "createlectrified",
                "Specification-Vendor"    : "createlectrifiedsareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "createlectrifiedsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
